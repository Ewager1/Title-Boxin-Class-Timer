{"ast":null,"code":"var _jsxFileName = \"/Users/edizzle/Desktop/Web Dev Projects/title-interval-app/title_interal_app/src/components/Timer/TimerBody.js\";\nimport React from \"react\";\nimport { Wrapper } from \"../UI/Wrapper\";\nimport rewindIcon from \"../../assets/rewind.png\";\nimport \"./TimerBody.scss\"; //take the props object and the setObject. replace let currentRound with props object current round, and ++.\n// in the countDown function, if num of rounds === input of rounds, go to gloves off\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TimerBody = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      className: \"itBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"emptyBtn\",\n        onClick: () => props.rewind,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: rewindIcon,\n          alt: \"Button that rewinds timer 15 seconds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: props.isPaused ? \"glow\" : \"\",\n        onClick: props.isPaused ? () => props.play() : () => props.pause(),\n        children: props.displayedTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = TimerBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerBody\");","map":{"version":3,"sources":["/Users/edizzle/Desktop/Web Dev Projects/title-interval-app/title_interal_app/src/components/Timer/TimerBody.js"],"names":["React","Wrapper","rewindIcon","TimerBody","props","console","log","rewind","isPaused","play","pause","displayedTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,OAAO,kBAAP,C,CAIA;AACA;;;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAAA,8BACA;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAE,MAAMA,KAAK,CAACG,MAAlD;AAAA,qCAA2D;AAAK,UAAA,GAAG,EAAEL,UAAV;AAAsB,UAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAI,QAAA,SAAS,EAAEE,KAAK,CAACI,QAAN,GAAiB,MAAjB,GAA0B,EAAzC;AAA6C,QAAA,OAAO,EAAEJ,KAAK,CAACI,QAAN,GAAiB,MAAMJ,KAAK,CAACK,IAAN,EAAvB,GAAsC,MAAML,KAAK,CAACM,KAAN,EAAlG;AAAA,kBACGN,KAAK,CAACO;AADT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAbM;KAAMR,S","sourcesContent":["import React from \"react\";\nimport { Wrapper } from \"../UI/Wrapper\";\n\nimport rewindIcon from \"../../assets/rewind.png\"\n\nimport \"./TimerBody.scss\";\n\n\n\n//take the props object and the setObject. replace let currentRound with props object current round, and ++.\n// in the countDown function, if num of rounds === input of rounds, go to gloves off\n\nexport const TimerBody = (props) => {\n  console.log(props)\n\n  return (\n    <main>\n      <Wrapper className=\"itBody\">\n      <button className=\"emptyBtn\" onClick={() => props.rewind}> <img src={rewindIcon} alt=\"Button that rewinds timer 15 seconds\" /></button>\n        <h1 className={props.isPaused ? \"glow\" : \"\"} onClick={props.isPaused ? () => props.play() : () => props.pause()}>\n          {props.displayedTime}\n        </h1>\n      </Wrapper>\n    </main>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}