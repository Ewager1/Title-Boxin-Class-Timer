{"ast":null,"code":"var _jsxFileName = \"/Users/edizzle/Desktop/Web Dev Projects/title-interval-app/title_interal_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TimerContext from \"./store/timer-context\";\nimport { IntervalTimer } from \"./pages/IntervalTimer\";\nimport { Homepage } from \"./pages/Homepage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userChoice, setUserChoice] = useState({\n    totalRounds: 8,\n    currentRound: 1,\n    warmUpTime: 7,\n    activeRestTime: 1,\n    glovesOnOffTime: 1,\n    roundTime: 3,\n    coreTime: 7\n  });\n  const [isTrainingMode, setIsTrainingMode] = useState(false);\n\n  const updateUserChoice = userChoice => {\n    setIsTrainingMode(false);\n    setUserChoice(userChoice);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TimerContext.Provider, {\n      value: {\n        userChoice,\n        isTrainingMode,\n        updateUserChoice: updateUserChoice,\n        updateTrainingMode: setIsTrainingMode\n      },\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/timer\",\n            children: /*#__PURE__*/_jsxDEV(IntervalTimer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"qGingYedaWGsWerFT3WYVF9mo0w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/edizzle/Desktop/Web Dev Projects/title-interval-app/title_interal_app/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","TimerContext","IntervalTimer","Homepage","App","userChoice","setUserChoice","totalRounds","currentRound","warmUpTime","activeRestTime","glovesOnOffTime","roundTime","coreTime","isTrainingMode","setIsTrainingMode","updateUserChoice","updateTrainingMode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC;AAC3CW,IAAAA,WAAW,EAAE,CAD8B;AAE3CC,IAAAA,YAAY,EAAE,CAF6B;AAG3CC,IAAAA,UAAU,EAAE,CAH+B;AAI3CC,IAAAA,cAAc,EAAE,CAJ2B;AAK3CC,IAAAA,eAAe,EAAE,CAL0B;AAM3CC,IAAAA,SAAS,EAAE,CANgC;AAO3CC,IAAAA,QAAQ,EAAE;AAPiC,GAAD,CAA5C;AAUA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMoB,gBAAgB,GAAIX,UAAD,IAAgB;AACvCU,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAT,IAAAA,aAAa,CAACD,UAAD,CAAb;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,YAAD,CAAc,QAAd;AACE,MAAA,KAAK,EAAE;AACLA,QAAAA,UADK;AAELS,QAAAA,cAFK;AAGLE,QAAAA,gBAAgB,EAAEA,gBAHb;AAILC,QAAAA,kBAAkB,EAAEF;AAJf,OADT;AAAA,6BAQE,QAAC,MAAD;AAAA,+BACE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAA,mCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAuBD;;GAzCQX,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TimerContext from \"./store/timer-context\";\nimport { IntervalTimer } from \"./pages/IntervalTimer\";\nimport { Homepage } from \"./pages/Homepage\";\n\nfunction App() {\n  const [userChoice, setUserChoice] = useState({\n    totalRounds: 8,\n    currentRound: 1,\n    warmUpTime: 7,\n    activeRestTime: 1,\n    glovesOnOffTime: 1,\n    roundTime: 3,\n    coreTime: 7,\n  });\n\n  const [isTrainingMode, setIsTrainingMode] = useState(false);\n\n  const updateUserChoice = (userChoice) => {\n    setIsTrainingMode(false);\n    setUserChoice(userChoice);\n  };\n\n  return (\n    <>\n      <TimerContext.Provider\n        value={{\n          userChoice,\n          isTrainingMode,\n          updateUserChoice: updateUserChoice,\n          updateTrainingMode: setIsTrainingMode,\n        }}\n      >\n        <Router>\n          <Switch>\n            <Route path=\"/timer\">\n              <IntervalTimer />\n            </Route>\n            <Route path=\"/\">\n              <Homepage />\n            </Route>\n          </Switch>\n        </Router>\n      </TimerContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}