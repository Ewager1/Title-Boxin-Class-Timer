{"ast":null,"code":"import _slicedToArray from\"/Users/edizzle/Desktop/Web Dev Projects/title-interval-app/docs/title_interal_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import TimerContext from\"./store/timer-context\";import{IntervalTimer}from\"./pages/IntervalTimer\";import{Homepage}from\"./pages/Homepage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState({totalRounds:8,currentRound:1,warmUpTime:7,activeRestTime:1,glovesOnOffTime:1,roundTime:3,coreTime:7}),_useState2=_slicedToArray(_useState,2),userChoice=_useState2[0],setUserChoice=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isTrainingMode=_useState4[0],setIsTrainingMode=_useState4[1];var updateUserChoice=function updateUserChoice(userChoice){setIsTrainingMode(false);setUserChoice(userChoice);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(TimerContext.Provider,{value:{userChoice:userChoice,isTrainingMode:isTrainingMode,updateUserChoice:updateUserChoice,updateTrainingMode:setIsTrainingMode},children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/timer\",children:/*#__PURE__*/_jsx(IntervalTimer,{})}),/*#__PURE__*/_jsx(Route,{path:\"/\",children:/*#__PURE__*/_jsx(Homepage,{})})]})})})});}export default App;","map":{"version":3,"sources":["/Users/edizzle/Desktop/Web Dev Projects/title-interval-app/docs/title_interal_app/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","TimerContext","IntervalTimer","Homepage","App","totalRounds","currentRound","warmUpTime","activeRestTime","glovesOnOffTime","roundTime","coreTime","userChoice","setUserChoice","isTrainingMode","setIsTrainingMode","updateUserChoice","updateTrainingMode"],"mappings":"wMAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAuD,kBAAvD,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,OAASC,aAAT,KAA8B,uBAA9B,CACA,OAASC,QAAT,KAAyB,kBAAzB,C,6IAIA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAoCR,QAAQ,CAAC,CAC3CS,WAAW,CAAE,CAD8B,CAE3CC,YAAY,CAAE,CAF6B,CAG3CC,UAAU,CAAE,CAH+B,CAI3CC,cAAc,CAAE,CAJ2B,CAK3CC,eAAe,CAAE,CAL0B,CAM3CC,SAAS,CAAE,CANgC,CAO3CC,QAAQ,CAAE,CAPiC,CAAD,CAA5C,wCAAOC,UAAP,eAAmBC,aAAnB,eAUA,eAA4CjB,QAAQ,CAAC,KAAD,CAApD,yCAAOkB,cAAP,eAAuBC,iBAAvB,eAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACJ,UAAD,CAAgB,CACvCG,iBAAiB,CAAC,KAAD,CAAjB,CACAF,aAAa,CAACD,UAAD,CAAb,CACD,CAHD,CAKA,mBACE,sCACE,KAAC,YAAD,CAAc,QAAd,EACE,KAAK,CAAE,CACLA,UAAU,CAAVA,UADK,CAELE,cAAc,CAAdA,cAFK,CAGLE,gBAAgB,CAAEA,gBAHb,CAILC,kBAAkB,CAAEF,iBAJf,CADT,uBAQE,KAAC,MAAD,wBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,uBACE,KAAC,aAAD,IADF,EADF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,uBACE,KAAC,QAAD,IADF,EAJF,GADF,EARF,EADF,EADF,CAuBD,CAED,cAAeX,CAAAA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TimerContext from \"./store/timer-context\";\nimport { IntervalTimer } from \"./pages/IntervalTimer\";\nimport { Homepage } from \"./pages/Homepage\";\n\n\n\nfunction App() {\n  const [userChoice, setUserChoice] = useState({\n    totalRounds: 8,\n    currentRound: 1,\n    warmUpTime: 7,\n    activeRestTime: 1,\n    glovesOnOffTime: 1,\n    roundTime: 3,\n    coreTime: 7,\n  });\n\n  const [isTrainingMode, setIsTrainingMode] = useState(false);\n\n  const updateUserChoice = (userChoice) => {\n    setIsTrainingMode(false);\n    setUserChoice(userChoice);\n  };\n\n  return (\n    <>\n      <TimerContext.Provider\n        value={{\n          userChoice,\n          isTrainingMode,\n          updateUserChoice: updateUserChoice,\n          updateTrainingMode: setIsTrainingMode,\n        }}\n      >\n        <Router>\n          <Switch>\n            <Route path=\"/timer\">\n              <IntervalTimer />\n            </Route>\n            <Route path=\"/\">\n              <Homepage />\n            </Route>\n          </Switch>\n        </Router>\n      </TimerContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}