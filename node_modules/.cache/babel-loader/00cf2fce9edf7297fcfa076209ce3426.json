{"ast":null,"code":"var _jsxFileName = \"/Users/edizzle/Desktop/Web Dev Projects/title-interval-app/title_interal_app/src/components/Timer/TimerBody.js\";\nimport React from \"react\";\nimport { Wrapper } from \"../UI/Wrapper\";\nimport \"./TimerBody.scss\"; //take the props object and the setObject. replace let currentRound with props object current round, and ++.\n// in the countDown function, if num of rounds === input of rounds, go to gloves off\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TimerBody = props => {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      className: \"itBody\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        onClick: props.isPaused ? () => props.play() : () => props.pause(),\n        children: props.displayedTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = TimerBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimerBody\");","map":{"version":3,"sources":["/Users/edizzle/Desktop/Web Dev Projects/title-interval-app/title_interal_app/src/components/Timer/TimerBody.js"],"names":["React","Wrapper","TimerBody","props","isPaused","play","pause","displayedTime"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAO,kBAAP,C,CAEA;AACA;;;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAClC,sBACE;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAAA,6BACE;AAAI,QAAA,OAAO,EAAEA,KAAK,CAACC,QAAN,GAAiB,MAAMD,KAAK,CAACE,IAAN,EAAvB,GAAsC,MAAMF,KAAK,CAACG,KAAN,EAAzD;AAAA,kBACGH,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVM;KAAML,S","sourcesContent":["import React from \"react\";\nimport { Wrapper } from \"../UI/Wrapper\";\n\nimport \"./TimerBody.scss\";\n\n//take the props object and the setObject. replace let currentRound with props object current round, and ++.\n// in the countDown function, if num of rounds === input of rounds, go to gloves off\n\nexport const TimerBody = (props) => {\n  return (\n    <main>\n      <Wrapper className=\"itBody\">\n        <h1 onClick={props.isPaused ? () => props.play() : () => props.pause()}>\n          {props.displayedTime}\n        </h1>\n      </Wrapper>\n    </main>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}